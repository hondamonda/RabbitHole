3.	Increasing Crisis
You will be given N – an integer. On the next N lines, you will receive sequences of integers, separated by a space.
Your task is to add each sequence’s integers to a list, so that it forms an increasing sequence.
If there are already elements inside the list, you must find the right-most element, 
lower by value, than the first element from the given sequence, and start INSERTING,
the sequence’s elements at the position, AFTER the found element.
If the increasing sequence is BROKEN, during the addition of new elements, you must IGNORE
the element that breaks it and all others after it. You must also remove all elements from the list,
AFTER the LAST ADDED element.
When you process all input lines, you must print the list’s elements, separated by a single space.
Constraints
•	The list, to which you add the elements, is initially empty.
•	The increasing sequence CAN have EQUAL elements.
•	Do NOT sort the list in any order.




Examples
Input		
5
1 2 12 15 16
4 5 6
5 5 5
3 2
3 4 5 6	

Output
1 2 3 3 4 5 6

Comment
The list is initially empty, so we add [1, 2, 12, 15, 16] to it.

After that we have [4, 5, 6]. We find the right-most element, lower by value than the first element (4),
which is 2, and we start INSERTING AFTER it.
The list is now [1, 2, 4, 5, 6, 12, 15, 16].

+ 5 5 5 -> [1, 2, 4, 5, 5, 5, 5, 6, 12, 15, 16].

Of the sequence [3, 2] we insert 3.
The 2nd element of the sequence (2) BREAKS the increasing sequence, and so we ignore it,
and we remove all elements after the last added (3), which results in
[1, 2, 3].

Then we have [3, 4, 5, 6] -> [1, 2, 3, 3, 4, 5, 6]
Input
4
1 2
2 1
2 3
4 5 1 6 7	

	Output
1 2 2 2 3 4 5

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class IncreasingCrisis {

	public static void main(String[] args) {

		Scanner scan = new Scanner(System.in);
		int lineToEnter = Integer.parseInt(scan.nextLine());

		List<Integer> result = new ArrayList<Integer>();

		for (int i = 0; i < lineToEnter; i++) {
			List<Integer> enter = new ArrayList<Integer>();
			enter.clear();
			String[] input = scan.nextLine().split(" ");
			enter.add(Integer.parseInt(input[0]));
			for (int a = 0; a < input.length - 1; a++) {
				if (Integer.parseInt(input[a]) <= Integer.parseInt(input[a + 1])) {
					enter.add(Integer.parseInt(input[a + 1]));
				} else {
					break;
				}
			}
			int count = 0;
			if (result.size() == 0) {
				result.addAll(enter);
			} else {
				for (int c = 0; c < result.size(); c++) {
					if (result.get(c) <= enter.get(0)) {
						count++;
					} else {
						break;
					}
				}
				result.addAll(count, enter);
				int index = 0;
				boolean isIncreasing = true;
				for (int a = 1; a < result.size(); a++) {
					if (result.get(a - 1) > result.get(a)) {
						isIncreasing = false;
						index = a;
						break;
					}
				}
				if (!isIncreasing) {
					for (int b = index; b < result.size(); b++) {
				    	result.remove(b);
						b--;
					}
				}
			}
		}
		scan.close();
		for (int num : result) {
			System.out.print(num + " ");
		}
	}
}


